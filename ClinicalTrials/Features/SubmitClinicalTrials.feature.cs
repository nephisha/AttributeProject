// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ClinicalTrials.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Submit a Clinical Trial for the Patient")]
    public partial class SubmitAClinicalTrialForThePatientFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SubmitClinicalTrials.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Submit a Clinical Trial for the Patient", "  In order to serve the patient medically\r\n  As a Doctor\r\n  I want to be able to " +
                    "submit a clinical trial for the patient", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Susan needs to submit a clinical trial")]
        [NUnit.Framework.CategoryAttribute("Clinical")]
        [NUnit.Framework.TestCaseAttribute("Test01", "Emmanuel Russel", "Welcome@123", "ACT Health", "ANZMTG", "ANZ11780009", "Phase II", "Adult", "Neurological", "Brain", "Regional", "1. Cancer", "Yes", "Wollongong Hospital", "Yes", "CEA", "Yes", "Yes", null)]
        [NUnit.Framework.TestCaseAttribute("Test02", "Emmanuel Russel", "Welcome@123", "Kosan", "CCLG", "ANZ11780010", "Phase Ia", "Adolescent", "Haematological", "Leukaemia", "Localised", "3. Both", "Yes", "Nepean Hospital", "Yes", "HER2", "Yes", "Yes", null)]
        public virtual void SusanNeedsToSubmitAClinicalTrial(
                    string test, 
                    string userName, 
                    string password, 
                    string sponsor, 
                    string coopGroup, 
                    string regoNumber, 
                    string phase, 
                    string group, 
                    string tumourCategory, 
                    string tumourGroup, 
                    string stage, 
                    string population, 
                    string multiCentre, 
                    string site, 
                    string bioMarkerStudy, 
                    string molTarget, 
                    string trialEligiblity, 
                    string tissueAvailability, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Clinical"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Susan needs to submit a clinical trial", @__tags);
#line 8
  this.ScenarioSetup(scenarioInfo);
#line 10
    testRunner.Given(string.Format("that I login to Clinical Trial Application with {0} and {1}", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.And(string.Format("she fills up the Trial details with {0} and {1} and {2} and {3} and {4} and {5} a" +
                        "nd {6} and {7} and {8} and {9} and {10} and {11} and {12}", sponsor, coopGroup, regoNumber, phase, group, tumourCategory, tumourGroup, stage, population, multiCentre, site, bioMarkerStudy, molTarget), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And(string.Format("she fills up the BioMarker section {0} and {1} and {2}", trialEligiblity, molTarget, tissueAvailability), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("she fills up the Trial Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("she fills up the Portfolio Inclusion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("she fills up the Reporting Group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
    testRunner.When("she submits the trial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
    testRunner.Then("she should be shown with success message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
